package com.javagetorders.models;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

/**
 * The entity allowing interaction with the agents table.
 */
@Entity
@Table(name = "agents")
public class Agent
{
    /**
     * The primary key number (long) of the agents table.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long agentcode;

    /**
     * The name (String) of the agent.
     */
    private String agentname;

    /**
     * The working area, geographical area, (String) of the agent.
     */
    private String workingarea;

    /**
     * The commission rate (double) of the agent.
     */
    private double commission;

    /**
     * The phone number (String) of the agent. No predefined format.
     */
    private String phone;

    /**
     * The country (String) where the agent is localed.
     */
    private String country;

    /**
     * List of customers associated with this agent. Does not get saved in the database directly.
     * Forms a One-To-Many relationship with customers. One agent to many customers.
     */
    @OneToMany(mappedBy = "agent",
        cascade = CascadeType.ALL,
        orphanRemoval = true)
    @JsonIgnoreProperties(value = "agent",
        allowSetters = true)
    private List<Customer> customers = new ArrayList<>();

    /**
     * Default constructor used primarily by the JPA.
     */
    public Agent()
    {
    }

    /**
     * Given the params, create a new agent object.
     * <p>
     * agentcode is autogenerated.
     *
     * @param agentname   The name (String) of the agent.
     * @param workingarea The working area, geographical area, (String) of the agent.
     * @param commission  The commission rate (double) of the agent.
     * @param phone       The phone number (String) of the agent. No predefined format.
     * @param country     The country (String) where the agent is localed.
     *                    customers are added outside of this constructor.
     */
    public Agent(
        String agentname,
        String workingarea,
        double commission,
        String phone,
        String country)
    {
        this.agentname = agentname;
        this.workingarea = workingarea;
        this.commission = commission;
        this.phone = phone;
        this.country = country;
    }

    /**
     * Getter for agentcode.
     *
     * @return The primary key number (long) of the agents table.
     */
    public long getAgentcode()
    {
        return agentcode;
    }

    /**
     * Setter for agentcode - used primarily when seeding data.
     *
     * @param agentcode The primary key number (long) of the agents table.
     */
    public void setAgentcode(long agentcode)
    {
        this.agentcode = agentcode;
    }

    /**
     * Getter for agentname.
     *
     * @return The name (String) of the agent.
     */
    public String getAgentname()
    {
        return agentname;
    }

    /**
     * Setter for agentname.
     *
     * @param agentname The new name (String) of the agent.
     */
    public void setAgentname(String agentname)
    {
        this.agentname = agentname;
    }

    /**
     * Getter for workingarea.
     *
     * @return The working area, geographical area, (String) of the agent.
     */
    public String getWorkingarea()
    {
        return workingarea;
    }

    /**
     * Setter for workingarea.
     *
     * @param workingarea The new working area, geographical area, (String) of the agent.
     */
    public void setWorkingarea(String workingarea)
    {
        this.workingarea = workingarea;
    }

    /**
     * Getter for commission.
     *
     * @return The commission rate (double) of the agent.
     */
    public double getCommission()
    {
        return commission;
    }

    /**
     * Setter for the commission.
     * <p>
     * If the value is set through the JPA, specifically through a JSON object set to this API,
     * hasvaluefor will be set to true. Otherwise it defaults to false.
     * This allows the application to tell if a commission rate is 0.0 because it was set as 0.0 or
     * because it is not set and thus should be considered NULL but is in fact 0.0.
     *
     * @param commission The new commission rate (double) of the agent.
     */
    public void setCommission(double commission)
    {
        this.commission = commission;
    }

    /**
     * Getter for phone.
     *
     * @return The phone number (String) of the agent. No predefined format.
     */
    public String getPhone()
    {
        return phone;
    }

    /**
     * Setter for phone.
     *
     * @param phone The new phone number (String) of the agent. No predefined format.
     */
    public void setPhone(String phone)
    {
        this.phone = phone;
    }

    /**
     * Getter for country.
     *
     * @return The country (String) where the agent is localed.
     */
    public String getCountry()
    {
        return country;
    }

    /**
     * Setter for country.
     *
     * @param country The new country (String) where the agent is localed.
     */
    public void setCountry(String country)
    {
        this.country = country;
    }

    /**
     * Getter for customers.
     *
     * @return List of customers associated with this agent.
     */
    public List<Customer> getCustomers()
    {
        return customers;
    }

    /**
     * Setter for customers.
     *
     * @param customers Replaces the list of customers associated with this agent with the this list.
     */
    public void setCustomers(List<Customer> customers)
    {
        this.customers = customers;
    }
}
